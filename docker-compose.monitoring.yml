services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8070:80"
    container_name: fusionpact-frontend
    restart: unless-stopped
    networks:
      - fusionpact-network
    environment:
      - NODE_ENV=production

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8060:8060"
    container_name: fusionpact-backend
    restart: unless-stopped
    volumes:
      # Data persistence for user data
      - backend-data:/app/app/data
    environment:
      - PYTHONPATH=/app
      - ENV=production
    networks:
      - fusionpact-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: fusionpact-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - fusionpact-network

  # Grafana visualization
  grafana:
    image: grafana/grafana:latest
    container_name: fusionpact-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - fusionpact-network
    depends_on:
      - prometheus

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: fusionpact-cadvisor
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - fusionpact-network
    privileged: true

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: fusionpact-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - fusionpact-network

# Named volumes for data persistence
volumes:
  backend-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# Custom network for service communication
networks:
  fusionpact-network:
    driver: bridge
